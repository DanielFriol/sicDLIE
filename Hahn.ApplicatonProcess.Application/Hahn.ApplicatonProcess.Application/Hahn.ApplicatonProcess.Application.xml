<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Hahn.ApplicatonProcess.Application</name>
    </assembly>
    <members>
        <member name="M:Hahn.ApplicatonProcess.Application.Controllers.PersonController.GetAll">
            <summary>
            Lists all the persons
            </summary>
            <returns>A list of person</returns>
            <response code="200">All persons returned successfully</response>
        </member>
        <member name="M:Hahn.ApplicatonProcess.Application.Controllers.PersonController.GetById(System.Int64)">
            <summary>
            Return the person by the id
            </summary>
            <returns>A person</returns>
            <response code="200">Person returned successfully</response>
            <response code="404">If there is no person with the id given or the if the id is 0</response>
        </member>
        <member name="M:Hahn.ApplicatonProcess.Application.Controllers.PersonController.Post(Hahn.ApplicatonProcess.May2020.Domain.Mediator.Person.Add.Request)">
            <summary>
            Adds a new Person
            </summary>
            <remarks>
            Requistion example:
                POST /Person
             {
                 "name": "teste",
                 "familyName": "teste",
                 "address": "streetblabla",
                 "countryOfOrigin": "brazil",
                 "emailAdress": "test@test.com.br",
                 "age": 20,
                 "hired": true
              }
            </remarks>
            <param name="request"></param>
            <returns>New person</returns>
            <response code="201">Returns the added person </response>
            <response code="400">In case of invalid request</response>
        </member>
        <member name="M:Hahn.ApplicatonProcess.Application.Controllers.PersonController.Put(System.Int64,Hahn.ApplicatonProcess.May2020.Domain.Mediator.Person.Update.Request)">
            <summary>
            Edits a person
            </summary>
            <remarks>
            Requistion example:
                PUT /Person/{id}
             {
                 "name": "teste",
                 "familyName": "teste",
                 "address": "streetblabla",
                 "age": 20,
                 "hired": true
              }
            </remarks>
            <param name="id"></param>
            <param name="request"></param>
            <returns>The edited person</returns>
            <response code="201">Returns the edited person </response>
            <response code="400">In case of invalid request</response>
        </member>
        <member name="M:Hahn.ApplicatonProcess.Application.Controllers.PersonController.Delete(System.Int64)">
            <summary>
            Delets a person
            </summary>
            <param name="id">Id of the person you want to delete</param>
            <returns></returns>
            <response code="200">Person deleted</response>
            <response code="400">In case that the id you passed is not related to any person</response>
        </member>
    </members>
</doc>
